.container {
  width: 100%;
}

.title {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--color-gray-900);
  margin-bottom: var(--space-2);
  text-align: center;
}

.description {
  font-size: 0.875rem;
  color: var(--color-gray-600);
  text-align: center;
  margin-bottom: var(--space-6);
}

.scannerArea {
  position: relative;
  width: 100%;
  min-height: 300px;
  background: var(--color-gray-900);
  border-radius: var(--radius-lg);
  overflow: hidden;
  margin-bottom: var(--space-4);
}

.reader {
  width: 100%;
  height: 100%;
}

.placeholder {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: white;
}

.qrIcon {
  font-size: 4rem;
  margin-bottom: var(--space-3);
}

.error {
  background: var(--color-danger-light);
  color: var(--color-danger-dark);
  padding: var(--space-3);
  border-radius: var(--radius-md);
  margin-bottom: var(--space-4);
  font-size: 0.875rem;
  text-align: center;
}

.actions {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

.divider {
  text-align: center;
  color: var(--color-gray-500);
  font-size: 0.875rem;
  font-weight: 500;
}
@media (max-width: 640px) {
  .title {
    font-size: 1.5rem;
  }

  .description {
    font-size: 0.875rem;
  }

  .scannerArea {
    min-height: 250px;
  }

  .reader {
    max-width: 100%;
  }
}

.spinner {
  border: 4px solid var(--color-gray-200);
  border-top: 4px solid var(--color-primary);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin: 0 auto;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/* ðŸ†• Spinner animation */
.spinner {
  border: 4px solid var(--color-gray-200);
  border-top: 4px solid var(--color-primary);
  border-radius: 50%;
  width: 48px;
  height: 48px;
  animation: spin 1s linear infinite;
  margin: 0 auto 1rem;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* ðŸ†• Success state */
.success {
  background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
  animation: successPulse 0.5s ease-in-out;
}

.successIcon {
  font-size: 4rem;
  margin-bottom: 1rem;
  animation: successZoom 0.5s ease-in-out;
}

@keyframes successPulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes successZoom {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

/* ðŸ†• Scanning indicator */
.scanningIndicator {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: var(--space-3) var(--space-6);
  border-radius: var(--radius-lg);
  backdrop-filter: blur(10px);
  z-index: 10;
}

.scanLine {
  width: 200px;
  height: 2px;
  background: linear-gradient(90deg, transparent, #10b981, transparent);
  margin: 0 auto 0.5rem;
  animation: scanAnimation 2s ease-in-out infinite;
}

@keyframes scanAnimation {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
}

.scanningText {
  font-size: 0.875rem;
  font-weight: 500;
  margin: 0;
}

/* ðŸ†• Permission hint */
.permissionHint {
  font-size: 0.75rem;
  color: var(--color-warning);
  margin-top: 0.5rem;
  font-weight: 500;
}

/* ðŸ†• Error action button */
.errorAction {
  display: block;
  margin-top: 0.75rem;
  padding: var(--space-2) var(--space-4);
  background: var(--color-danger-dark);
  color: white;
  border: none;
  border-radius: var(--radius-md);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-base);
}

.errorAction:hover {
  background: var(--color-danger);
  transform: translateY(-1px);
}

/* ðŸ†• Help text */
.helpText {
  text-align: center;
  font-size: 0.75rem;
  color: var(--color-gray-600);
  margin-top: var(--space-4);
  padding: var(--space-2);
  background: var(--color-gray-50);
  border-radius: var(--radius-md);
}

/* ðŸ†• Better mobile responsiveness */
@media (max-width: 480px) {
  .scanningIndicator {
    padding: var(--space-2) var(--space-4);
  }

  .scanLine {
    width: 150px;
  }

  .scanningText {
    font-size: 0.75rem;
  }
}

.video {
  width: 100%;
  max-width: 400px;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.scanningOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

.scanLine {
  width: 80%;
  height: 3px;
  background: linear-gradient(90deg, transparent, #10b981, transparent);
  animation: scanAnimation 2s ease-in-out infinite;
  box-shadow: 0 0 10px #10b981;
}

@keyframes scanAnimation {
  0%,
  100% {
    transform: translateY(-100px);
    opacity: 0.5;
  }
  50% {
    transform: translateY(100px);
    opacity: 1;
  }
}

.success {
  background: #d4edda;
  color: #155724;
  padding: var(--space-3);
  border-radius: var(--radius-md);
  margin: var(--space-4) 0;
  font-size: 0.875rem;
  text-align: center;
}

/*
KEPT FROM YOUR CODE:
âœ… Dynamic import (good!)
âœ… Loading state
âœ… Error handling
âœ… Cleanup on unmount

NEW IMPROVEMENTS:
ðŸ†• Camera permission check before starting
ðŸ†• Better cleanup with refs (prevent memory leaks)
ðŸ†• Success animation when QR detected
ðŸ†• Scanning indicator overlay
ðŸ†• Better error messages (specific for each error type)
ðŸ†• Auto-hide error after 5 seconds
ðŸ†• "Try again" button on permission error
ðŸ†• Help text for users
ðŸ†• Prevent multiple clicks (disabled states)
ðŸ†• useCallback for better performance
ðŸ†• Check camera availability before start
ðŸ†• Experimental features for faster decoding
ðŸ†• Handle camera in-use by other apps
ðŸ†• Visual feedback during scanning

BENEFITS:
ðŸ“ˆ Better UX with visual feedback
ðŸ“ˆ Prevent memory leaks
ðŸ“ˆ Better error handling
ðŸ“ˆ Faster QR detection
ðŸ“ˆ More intuitive for users
ðŸ“ˆ Production-ready
*/
