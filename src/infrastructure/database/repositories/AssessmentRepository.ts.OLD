// =====================================================
// FILE 1: src/infrastructure/database/repositories/AssessmentRepository.ts
// FIXED: Use inspection_records instead of inspections
// =====================================================

import { supabase } from '../supabase';
import { AssessmentSubmission, Assessments } from '../../../core/types/assessment.types';

export class AssessmentRepository {
  async createInspection(
    submission: AssessmentSubmission & { overallScore: number }
  ): Promise<string> {
    // Get default template
    const { data: template } = await supabase
      .from('inspection_templates')
      .select('id')
      .eq('is_default', true)
      .single();

    const now = new Date();
    const { data, error } = await supabase
      .from('inspection_records') // ✅ FIXED: Changed from 'inspections'
      .insert({
        template_id: template?.id,
        user_id: submission.userId,
        location_id: submission.locationId,
        inspection_date: now.toISOString().split('T')[0],
        inspection_time: now.toTimeString().split(' ')[0],
        overall_status: submission.status === 'completed' ? 'Clean' : 'Needs Work',
        responses: submission.assessments, // ✅ Changed from assessments to responses
        notes: submission.overallComment, // ✅ Changed from overall_comment to notes
        photo_urls: [], // ✅ Changed from photo_url to photo_urls array
      })
      .select('id')
      .single();

    if (error) {
      console.error('❌ Database insertion error:', error);
      throw new Error(`Gagal menyimpan assessment: ${error.message}`);
    }

    return data.id;
  }

  async getInspectionHistory(userId: string, limit: number = 10) {
    const { data, error } = await supabase
      .from('inspection_records') // ✅ FIXED: Changed from 'inspections'
      .select('*')
      .eq('user_id', userId)
      .order('submitted_at', { ascending: false }) // ✅ Changed from created_at
      .limit(limit);

    if (error) throw new Error(`Failed to fetch history: ${error.message}`);
    return data;
  }
}
